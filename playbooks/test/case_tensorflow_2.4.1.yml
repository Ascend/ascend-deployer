- name: test if tensorflow installed
  find:
    paths:
      - "{{ local_path }}/python3.7.5/lib"
    recurse: yes
    file_type: directory
    use_regex: yes
    patterns: "tensorflow"
  register: tf_root
  when: ansible_user_uid == 0

- name: test if tensorflow installed for non-root
  find:
    paths:
      - "{{ local_path }}/lib"
    recurse: yes
    file_type: directory
    use_regex: yes
    patterns: "tensorflow"
  register: tf_non_root
  when: ansible_user_uid != 0

- name: set_fact
  set_fact: tf={{ tf_root }}
  when: ansible_user_uid == 0

- name: set_fact for non-root
  set_fact: tf={{ tf_non_root }}
  when: ansible_user_uid != 0

- name: message
  debug:
    msg:
    - "tensorflow not installed"
  when: tf.matched == 0

- name: test import tensorflow
  shell: python3.7 -c "import tensorflow as tf; print(tf.__version__)"
  environment:
    PATH: "{{ local_path }}/python3.7.5/bin:{{ ansible_env.PATH }}"
    LD_LIBRARY_PATH: "{{ local_path }}/python3.7.5/lib:{{ ascend_install_path }}/ascend-toolkit/latest/fwkacllib/lib64:{{ local_path }}/gcc7.3.0/lib64"
  register: tf_version
  when: tf.matched > 0

- name: print tensorflow version
  debug: var=tf_version
  when: tf.matched > 0
  failed_when: tf_version.rc != 0 or (tf_version.rc == 0 and tf_version.stdout != "2.4.1")

- name: check add_ons directory exists
  shell: find {{ ascend_install_path }} -type d | grep add-ons | wc -l
  register: add_ons_dir
  when: tf.matched > 0

- name: check add_ons directory contains libprotobuf.so
  shell: find {{ ascend_install_path }}/add-ons/ -type f | grep libprotobuf.so | wc -l
  register: add_ons_dir_protobuf
  when: tf.matched > 0 and add_ons_dir.rc == 0 and add_ons_dir.stdout != '0'

- name: test npu_device without add_ons
  shell: python3.7 -c "import npu_device.configs; import npu_device.distribute; import npu_device.ops"
  environment:
    PATH: "{{ local_path }}/python3.7.5/bin:{{ ansible_env.PATH }}"
    LD_LIBRARY_PATH: "{{ local_path }}/python3.7.5/lib:{{ ascend_install_path }}/ascend-toolkit/latest/fwkacllib/lib64:{{ ascend_install_path }}/nnae/latest/fwkacllib/lib64:{{ local_path }}/gcc7.3.0/lib64:{{ ascend_install_path }}/ascend-toolkit/latest/atc/lib64"
    PYTHONPATH: "{{ ascend_install_path }}/tfplugin/latest/tfplugin/python/site-packages:{{ ascend_install_path }}/ascend-toolkit/latest/fwkacllib/python/site-packages:{{ ascend_install_path }}/nnae/latest/fwkacllib/python/site-packages"
  register: import_npu_device
  when:
    - tf.matched > 0
    - add_ons_dir.stdout == '0' or add_ons_dir_protobuf.stdout == '0'

- name: print npu_device without add_ons
  debug: var=import_npu_device
  when:
    - tf.matched > 0
    - add_ons_dir.stdout == '0' or add_ons_dir_protobuf.stdout == '0'

- name: test npu_device with add_ons
  shell: python3.7 -c "import npu_device.configs; import npu_device.distribute; import npu_device.ops"
  environment:
    PATH: "{{ local_path }}/python3.7.5/bin:{{ ansible_env.PATH }}"
    LD_LIBRARY_PATH: "{{ local_path }}/python3.7.5/lib:{{ ascend_install_path }}/ascend-toolkit/latest/fwkacllib/lib64:{{ ascend_install_path }}/nnae/latest/fwkacllib/lib64:{{ local_path }}/gcc7.3.0/lib64:{{ ascend_install_path }}/ascend-toolkit/latest/atc/lib64:{{ ascend_install_path }}/add-ons/"
    PYTHONPATH: "{{ ascend_install_path }}/tfplugin/latest/tfplugin/python/site-packages:{{ ascend_install_path }}/ascend-toolkit/latest/fwkacllib/python/site-packages:{{ ascend_install_path }}/nnae/latest/fwkacllib/python/site-packages"
  register: import_npu_device_with_add_ons
  when:
    - tf.matched > 0
    - add_ons_dir.rc == 0 and add_ons_dir.stdout != '0'
    - add_ons_dir_protobuf.rc == 0 and add_ons_dir_protobuf.stdout != '0'

- name: print npu_device with add_ons
  debug: var=import_npu_device_with_add_ons
  when:
    - tf.matched > 0
    - add_ons_dir.rc == 0 and add_ons_dir.stdout != '0'
    - add_ons_dir_protobuf.rc == 0 and add_ons_dir_protobuf.stdout != '0'
