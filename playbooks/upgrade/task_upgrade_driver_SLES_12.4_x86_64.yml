
- name: find driver package for common linux
  find:
    path: "{{ resources_dir }}"
    recurse: no
    file_type: file
    use_regex: yes
    patterns: "{{ ansible_local.npu_info.product }}-.*{{ ansible_local.npu_info.model_number }}.*driver.*linux.*{{ ansible_architecture }}.run"
  register: driver_pkg_linux

- debug:
    var: driver_pkg_linux
    verbosity: 1

- name: set /etc/modprobe.d/10-unsupported-modules.conf allow_unsupported_modules 1
  lineinfile:
    dest: /etc/modprobe.d/10-unsupported-modules.conf
    regexp: "^allow_unsupported_modules"
    line: "allow_unsupported_modules 1"
    state: present

- name: query current driver version
  shell: cat /usr/local/Ascend/driver/version.info | grep Version | cut -d"=" -f2
  register: cur_driver_version

- debug: var=cur_driver_version

- name: set fact for target_driver_version
  set_fact:
    target_driver_version: "{{ driver_pkg_linux.files[0].path.split('/') | last | regex_replace('.*npu-driver_(.*)_.*\\.run', '\\1') }}"
  failed_when: driver_pkg_linux.matched == 0

- debug: var=target_driver_version

- name: add run permission for common linux driver package
  file:
    path: "{{driver_pkg_linux.files[0].path}}"
    mode: a+x
  when: 
    - driver_pkg_linux.matched > 0
    - cur_driver_version.stdout != target_driver_version

- name: upgrade driver for common linux
  shell: "{{driver_pkg_linux.files[0].path}} --upgrade --quiet"
  register: driver_result
  failed_when: "'upgrade success' not in driver_result.stdout"
  when: 
    - driver_pkg_linux.matched > 0
    - cur_driver_version.stdout != target_driver_version

- debug: var=driver_result
