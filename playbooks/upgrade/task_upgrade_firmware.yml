- name: include vars
  include_vars: ../os_map.yml

- set_fact: run_dir={{ resources_dir }}

- set_fact: run_dir={{ scene_dict[ansible_local.npu_info.scene] }}
  when: ansible_local.npu_info.scene != ""

- set_fact: firmware_run=""

- name: find firmware package for specific model
  find:
    paths: "{{ run_dir }}"
    recurse: no
    file_type: file
    use_regex: yes
    patterns: "{{ ansible_local.npu_info.product }}-.*{{ ansible_local.npu_info.model_number }}.*firmware.*.run"
  register: firmware_pkg

- set_fact: firmware_run={{ firmware_pkg.files[0].path }}
  when: firmware_pkg.matched > 0

- name: find firmware package
  find:
    paths: "{{ run_dir }}"
    recurse: no
    file_type: file
    use_regex: yes
    patterns: "npu-firmware.*.run"
  register: firmware_pkg
  when: firmware_run | length == 0

- set_fact: firmware_run={{ firmware_pkg.files[0].path }}
  when:
    - firmware_pkg is not skipped
    - firmware_pkg.matched > 0

- name: get current firmware version
  shell: cat /usr/local/Ascend/firmware/version.info | grep Version | cut -d"=" -f2
  register: cur_firmware_version

- set_fact: current_firmware_version={{ cur_firmware_version.stdout }}

- name: get target firmware version
  set_fact:
    target_firmware_version: "{{ firmware_run.split('/') | last | regex_replace('.*npu-firmware_(.*)\\.run', '\\1') }}"
  when: firmware_run | length > 0

- name: message
  debug:
    msg:
      - "current firmware = {{ current_firmware_version }}"
      - "target firmware = {{ target_firmware_version }}"
  when: firmware_run | length > 0

- name: upgrade firmware
  shell: "bash {{ firmware_run }} --upgrade --quiet"
  register: firmware_result
  when:
    - firmware_run | length > 0
    - current_firmware_version != target_firmware_version

- debug: var=firmware_result
  when: firmware_result is not skipped

- debug:
    msg:
      -: "can not find firmware package"
  when: firmware_run | length == 0

- name: message
  debug:
    msg:
      - "Firmware package upgrade success! Reboot needed from installation"
  when:
    - firmware_result is not skipped
    - "'Reboot needed' in firmware_result.stdout"
