- name: find tfplugin package
  find:
    paths: "{{ cann_dirs }}"
    recurse: no
    file_type: file
    use_regex: yes
    patterns: ".*tfplugin.*{{ansible_architecture}}.run"
  register: tfplugin

- name: query current tfplugin version
  shell: "cat {{ ascend_install_path }}/tfplugin/latest/ascend_tfplugin_install.info | grep ^version | cut -d'=' -f2"
  register: cur_tfplugin_version
  when: tfplugin.matched > 0

- set_fact: current_tfplugin_version={{ cur_tfplugin_version.stdout }}
  when: tfplugin.matched > 0

- name: get target tfplugin version
  set_fact:
    target_tfplugin_version: "{{ tfplugin.files[0].path.split('/') | last | regex_replace('.*tfplugin_(.*)_linux.*', '\\1') }}"
  when: tfplugin.matched > 0

- name: message
  debug:
    msg:
      - "current tfplugin version = {{ current_tfplugin_version }}"
      - "target tfplugin version = {{ target_tfplugin_version }}"
  when: tfplugin.matched > 0

- name: upgrade tfplugin
  shell: "bash {{ tfplugin.files[0].path }} --upgrade"
  environment:
    LD_LIBRARY_PATH: "{{ local_path }}/{{ python_version }}/lib"
    PATH: "{{ local_path }}/{{ python_version }}/bin:{{ ansible_env.PATH }}"
  register: tfplugin_result
  when: 
    - tfplugin.matched > 0
    - current_tfplugin_version != target_tfplugin_version
  failed_when: tfplugin_result.rc !=0

- name: message
  debug:
    msg:
      - "can not find tfplugin package, tfplugin upgrade skipped"
  when: tfplugin.matched == 0

- name: message
  debug:
    msg:
      - "current tfplugin version is same as target tfplugin version, tfplugin upgrade skipped"
  when:
    - tfplugin.matched > 0
    - current_tfplugin_version == target_tfplugin_version

- name: message
  debug:
    msg:
      - "{{ tfplugin_result | default('NOT DEFINED') }}"
  when: tfplugin_result.changed
