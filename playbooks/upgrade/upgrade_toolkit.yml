- hosts: '{{ hosts_name }}'
  tasks:
    - name: find toolkit package
      find:
        paths: "{{ resources_dir }}"
        recurse: no
        file_type: file
        use_regex: yes
        patterns: ".*toolkit.*{{ ansible_architecture }}.run"
      register: toolkit

    - name: query current toolkit version
      shell: cat /usr/local/Ascend/ascend-toolkit/latest/arm64-linux/ascend_toolkit_install.info | grep version | cut -d"=" -f2
      register: cur_toolkit_ver_arm64
      when: ansible_architecture == 'aarch64'

    - name: query current toolkit version
      shell: cat /usr/local/Ascend/ascend-toolkit/latest/x86_64-linux/ascend_toolkit_install.info | grep version | cut -d"=" -f2
      register: cur_toolkit_ver_x86_64
      when: ansible_architecture == 'x86_64'

    - debug: var=cur_toolkit_ver_arm64

    - debug: var=cur_toolkit_ver_x86_64

    - name: set fact for target_toolkit_version
      set_fact:
        target_toolkit_version: "{{ toolkit.files[0].path.split('/') | last | regex_replace('.*toolkit_(.*)_linux.*', '\\1') }}"

    - debug: var=target_toolkit_version

    - name: add run permission for {{ toolkit.files[0].path }}
      file:
        path: "{{ toolkit.files[0].path }}"
        mode: a+x
      when: 
        - toolkit.matched > 0
        - (cur_toolkit_ver_x86_64 is not skipped and cur_toolkit_ver_x86_64.stdout != target_toolkit_version) or
          (cur_toolkit_ver_arm64 is not skipped and cur_toolkit_ver_arm64.stdout != target_toolkit_version)

    - name: upgrade toolkit {{ toolkit.files[0].path }}
      shell: "{{ toolkit.files[0].path }} --upgrade --quiet"
      environment:
        LD_LIBRARY_PATH: /usr/local/python3.7.5/lib
        PATH: /usr/local/python3.7.5/bin:{{ ansible_env.PATH }}
      register: toolkit_result
      when: 
        - toolkit.matched > 0
        - (cur_toolkit_ver_x86_64 is not skipped and cur_toolkit_ver_x86_64.stdout != target_toolkit_version) or
          (cur_toolkit_ver_arm64 is not skipped and cur_toolkit_ver_arm64.stdout != target_toolkit_version)
      failed_when: "toolkit_result.rc != 0 and 'upgrade success' not in toolkit_result.stdout"

    - debug: var=toolkit_result
