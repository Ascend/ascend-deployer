- hosts: '{{ hosts_name }}'
  tasks:
    - name: find tfplugin package
      find:
        paths: "{{ resources_dir }}"
        recurse: no
        file_type: file
        use_regex: yes
        patterns: ".*tfplugin.*{{ansible_architecture}}.run"
      register: tfplugin

    - name: query current tfplugin version
      shell: cat /usr/local/Ascend/tfplugin/latest/ascend_tfplugin_install.info | grep version | cut -d"=" -f2
      register: cur_tfplugin_version

    - debug: var=cur_tfplugin_version

    - name: set fact for target_tfplugin_version
      set_fact:
        target_tfplugin_version: "{{ tfplugin.files[0].path.split('/') | last | regex_replace('.*tfplugin_(.*)_linux.*', '\\1') }}"

    - debug: var=target_tfplugin_version

    - name: add run permission for tfplugin
      file:
        path: "{{ tfplugin.files[0].path }}"
        mode: a+x
      when: 
        - tfplugin.matched > 0
        - cur_tfplugin_version.stdout != target_tfplugin_version

    - name: upgrade tfplugin
      shell: "{{ tfplugin.files[0].path }} --upgrade --quiet"
      environment:
        LD_LIBRARY_PATH: /usr/local/python3.7.5/lib
        PATH: /usr/local/python3.7.5/bin:{{ ansible_env.PATH }}
      register: tfplugin_result
      when: 
        - tfplugin.matched > 0
        - cur_tfplugin_version.stdout != target_tfplugin_version
      failed_when: "tfplugin_result.rc !=0 and 'upgrade success' not in tfplugin_result.stdout"

    - debug: var=tfplugin_result
