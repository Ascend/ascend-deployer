- name: find toolbox package
  find:
    paths: "{{ cann_dirs }}"
    recurse: no
    file_type: file
    use_regex: yes
    patterns: ".*toolbox.*{{ansible_architecture}}.run"
  register: toolbox

- name: query current toolbox version
  shell: "cat {{ ascend_install_path }}/toolbox/latest/ascend_toolbox_install.info | grep ^version | cut -d'=' -f2"
  register: cur_toolbox_version
  when: toolbox.matched > 0

- set_fact: current_toolbox_version={{ cur_toolbox_version.stdout }}
  when: toolbox.matched > 0

- name: get target toolbox version
  set_fact:
    target_toolbox_version: "{{ toolbox.files[0].path.split('/') | last | regex_replace('.*toolbox_(.*)_linux.*', '\\1') }}"
  when: toolbox.matched > 0

- name: message
  debug:
    msg:
      - "current toolbox version = {{ current_toolbox_version }}"
      - "target toolbox version = {{ target_toolbox_version }}"
  when: toolbox.matched > 0

- name: upgrade toolbox
  shell: "bash {{ toolbox.files[0].path }} --upgrade"
  register: toolbox_result
  when: 
    - toolbox.matched > 0
    - current_toolbox_version != target_toolbox_version
  failed_when: toolbox_result.rc !=0

- name: message
  debug:
    msg:
      - "can not find toolbox package, toolbox upgrade skipped"
  when: toolbox.matched == 0

- name: message
  debug:
    msg:
      - "current toolbox version is same as target toolbox version, toolbox upgrade skipped"
  when:
    - toolbox.matched > 0
    - current_toolbox_version == target_toolbox_version

- name: message
  debug:
    msg:
      - "{{ toolbox_result | default('NOT DEFINED') }}"
  when: toolbox_result.changed
