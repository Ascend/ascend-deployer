- hosts: '{{ hosts_name }}'
  tasks:
    - name: find uninstall.sh in nnrt without version params
      shell: "find {{ ascend_install_path }}/nnrt/latest/ -type f | grep -E '/*-linux/script/uninstall.sh' | head -n 1"
      register: uninstall_nnrt
      when: uninstall_version == ""

    - name: message
      debug:
        msg:
          - "nnrt is not installed, nnrt uninstall skipped"
      when:
        - uninstall_version == ""
        - uninstall_nnrt.stdout == ''

    - name: uninstall nnrt without version params
      shell: "{{ uninstall_nnrt.stdout }}"
      register: result
      when:
        - uninstall_version == ""
        - uninstall_nnrt.rc == 0
        - uninstall_nnrt.stdout != ''
      failed_when: result.rc != 0

    - name: show uninstall result without uninstall_version
      debug: var=result
      when:
        - uninstall_version == ""
        - result.changed

    - name: show app info
      debug: var={{ item }}
      when:
        - uninstall_version != ""
        - item.install_path and item.name and item.version
        - item.name == 'nnrt'
      with_items:
        - "{{ ansible_local.app_info.result }}"

    - name: uninstall nnrt with version params
      shell: "{{ item.install_path }}/script/uninstall.sh"
      register: result_with_version
      when:
        - uninstall_version != ""
        - item.install_path and item.name and item.version
        - item.name == 'nnrt'
        - item.version == uninstall_version
      with_items:
        - "{{ ansible_local.app_info.result }}"
      failed_when: result_with_version.rc != 0

    - name: message
      debug:
        msg:
          - "nnrt is not installed or uninstall_version is not matching"
      failed_when: true
      when:
        - uninstall_version != ""
        - not result_with_version.changed

    - name: show uninstall result with version params
      debug: var=item
      when:
        - uninstall_version != ""
        - item.changed
      with_items:
        - "{{ result_with_version.results }}"
