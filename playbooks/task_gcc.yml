- name: create build directory
  file:
    path: ~/build
    state: directory
    recurse: yes

- name: uncompress gcc
  unarchive:
    src: "{{ resources_dir }}/gcc-7.3.0.tar.gz"
    dest: ~/build
    copy: no

- name: cp mpfr-3.1.4.tar.bz2
  copy:
    src: "{{ resources_dir }}/mpfr-3.1.4.tar.bz2"
    dest: ~/build/gcc-7.3.0/
    remote_src: yes

- name: cp mpc-1.0.3.tar.gz
  copy:
    src: "{{ resources_dir }}/mpc-1.0.3.tar.gz"
    dest: ~/build/gcc-7.3.0/
    remote_src: yes

- name: cp gmp-6.1.0.tar.bz2
  copy:
    src: "{{ resources_dir }}/gmp-6.1.0.tar.bz2"
    dest: ~/build/gcc-7.3.0/
    remote_src: yes

- name: cp isl-0.16.1.tar.bz2
  copy:
    src: "{{ resources_dir }}/isl-0.16.1.tar.bz2"
    dest: ~/build/gcc-7.3.0/
    remote_src: yes

- name: download_prerequisites
  shell: cd ~/build/gcc-7.3.0/; ./contrib/download_prerequisites

- name: check makefile exist
  stat:
    path: ~/build/gcc-7.3.0/Makefile
  register: makefile_stat

- name: make distclean
  shell: make -C ~/build/gcc-7.3.0 distclean
  when: makefile_stat.stat.exists

- name: configure gcc
  shell: "cd ~/build/gcc-7.3.0; ./configure --enable-languages=c,c++ --disable-multilib --with-system-zlib --prefix=/usr/local/gcc7.3.0"
  register: configure_result

- name: check libstdc++.so exist
  shell: find ~/build/gcc-7.3.0 -name libstdc++.so | wc -l
  register: cxx

- name: make gcc
  shell: make -C ~/build/gcc-7.3.0 -j20
  register: make_result
  when: "'0' in cxx.stdout"
  ignore_errors: yes

- name: make install
  shell: make -C ~/build/gcc-7.3.0 install
  when: "'0' in cxx.stdout"
  register: install_result

- debug: var=install_result
