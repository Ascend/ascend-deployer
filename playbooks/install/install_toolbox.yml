- hosts: '{{ hosts_name }}'
  tasks:

    - name: find toolbox package from run_from_zip_dir first
      find:
        paths: "{{ resources_dir }}/run_from_zip_dir"
        recurse: no
        file_type: file
        use_regex: yes
        patterns: ".*toolbox.*{{ ansible_architecture }}.run"
      register: toolbox_from_zip

    - name: install toolbox from run_from_zip_dir first
      shell: "bash {{ toolbox_from_zip.files[0].path }} --install --quiet --install-username={{ user }} --install-usergroup={{ group }}"
      become: yes
      register: toolbox_from_zip_result
      when: toolbox_from_zip.matched > 0
      failed_when: "toolbox_from_zip_result.rc != 0 and ('install success' not in toolbox_from_zip_result.stdout and 'already installed' not in toolbox_from_zip_result.stdout)"

    - name: find toolbox package
      find:
        paths: "{{ resources_dir }}"
        recurse: no
        file_type: file
        use_regex: yes
        patterns: ".*toolbox.*{{ ansible_architecture }}.run"
      register: toolbox
      when: toolbox_from_zip.matched == 0

    - name: install toolbox
      shell: "bash {{ toolbox.files[0].path }} --install --quiet --install-username={{ user }} --install-usergroup={{ group }}"
      become: yes
      register: toolbox_result
      when: toolbox_from_zip.matched == 0 and toolbox.matched > 0

    - name: message
      debug:
        msg:
          - "can not find toolbox package, toolbox install skipped"
      when: toolbox_from_zip.matched == 0 and toolbox.matched == 0

    - name: message
      debug:
        msg:
          - "{{ toolbox_from_zip_result | default('NOT DEFINED') }}"
          - "{{ toolbox_result | default('NOT DEFINED') }}"
      when: toolbox_from_zip_result.changed or toolbox_result.changed
