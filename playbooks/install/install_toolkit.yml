- hosts: '{{ hosts_name }}'
  tasks:

    - name: create user if not exist
      import_tasks: ../create_user.yml

    - name: check ascend cann install info
      stat:
        path: /etc/Ascend/ascend_cann_install.info
      register: install_info

    - name: set install_path enable
      set_fact:
        ins_path_cmd: "--install-path={{ install_path }}"
      when: not install_info.stat.exists

    - name: set install_path disable
      set_fact:
        ins_path_cmd: ""
      when: install_info.stat.exists or ansible_user_uid != 0

    - name: find toolkit package
      find:
        paths: "{{ cann_dirs }}"
        recurse: no
        file_type: file
        use_regex: yes
        patterns: ".*toolkit.*{{ ansible_architecture }}.run"
      register: toolkit

    - name: install toolkit
      shell: "bash {{ toolkit.files[0].path }} {{ cann_install_params }} {{ins_path_cmd}}"
      environment:
        LD_LIBRARY_PATH: "{{ local_path }}/python3.7.5/lib"
        PATH: "{{ local_path }}/python3.7.5/bin:{{ ansible_env.PATH }}"
      register: toolkit_result
      when: toolkit.matched > 0
      failed_when: "toolkit_result.rc != 0 and 'already installed' not in toolkit_result.stdout"

    - name: find toolkit aarch64 package
      find:
        paths: "{{ cann_dirs }}"
        recurse: no
        file_type: file
        use_regex: yes
        patterns: ".*toolkit.*aarch64.run"
      register: toolkit_aarch64

    - name: check ascend cann install info
      stat:
        path: /etc/Ascend/ascend_cann_install.info
      register: install_info

    - name: set install_path disable for toolkit aarch64
      set_fact:
        ins_path_cmd: ""
      when: install_info.stat.exists or ansible_user_uid != 0

    - name: install toolkit aarch64 for Ubuntu_18.04_x86_64
      shell: "bash {{ toolkit_aarch64.files[0].path }} {{ cann_install_params }} {{ ins_path_cmd }}"
      environment:
        LD_LIBRARY_PATH: "{{ local_path }}/python3.7.5/lib"
        PATH: "{{ local_path }}/python3.7.5/bin:{{ ansible_env.PATH }}"
      register: toolkit_result_ubuntu
      when:
        - os_and_arch == 'Ubuntu_18.04_x86_64'
        - toolkit_aarch64.matched > 0
      failed_when: "toolkit_result_ubuntu.rc != 0 and 'already installed' not in toolkit_result_ubuntu.stdout"

    - name: message
      debug:
        msg:
          - "can not find toolkit package, toolkit install skipped"
      when:
        - toolkit.matched == 0
        - toolkit_aarch64.matched == 0

    - name: message
      debug:
        msg:
          - "{{ toolkit_result | default('NOT DEFINED') }}"
          - "{{ toolkit_result_ubuntu | default('NOT DEFINED') }}"
      when: toolkit_result.changed or toolkit_result_ubuntu.changed
