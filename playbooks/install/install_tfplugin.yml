- hosts: '{{ hosts_name }}'
  tasks:

    - name: find tfplugin package from run_from_zip_dir first
      find:
        paths: "{{ resources_dir }}/run_from_zip_dir"
        recurse: no
        file_type: file
        use_regex: yes
        patterns: ".*tfplugin.*{{ ansible_architecture }}.run"
      register: tfplugin_from_zip

    - name: install tfplugin from run_from_zip_dir first
      shell: "bash {{ tfplugin_from_zip.files[0].path }} --install --quiet --install-username={{ user }} --install-usergroup={{ group }}"
      become: yes
      environment:
        LD_LIBRARY_PATH: /usr/local/python3.7.5/lib
        PATH: /usr/local/python3.7.5/bin:{{ ansible_env.PATH }}
      register: tfplugin_from_zip_result
      when: tfplugin_from_zip.matched > 0
      failed_when: "tfplugin_from_zip_result.rc != 0 and ('install success' not in tfplugin_from_zip_result.stdout and 'already installed' not in tfplugin_from_zip_result.stdout)"

    - name: find tfplugin package
      find:
        paths: "{{ resources_dir }}"
        recurse: no
        file_type: file
        use_regex: yes
        patterns: ".*tfplugin.*{{ansible_architecture}}.run"
      register: tfplugin
      when: tfplugin_from_zip.matched == 0

    - name: install tfplugin
      shell: "bash {{ tfplugin.files[0].path }} --install --quiet --install-username={{ user }} --install-usergroup={{ group }}"
      become: yes
      environment:
        LD_LIBRARY_PATH: /usr/local/python3.7.5/lib
        PATH: /usr/local/python3.7.5/bin:{{ ansible_env.PATH }}
      register: tfplugin_result
      when: tfplugin_from_zip.matched == 0 and tfplugin.matched > 0
      failed_when: "tfplugin_result.rc !=0 and ('install success' not in tfplugin_result.stdout and 'already installed' not in tfplugin_result.stdout)"

    - name: message
      debug:
        msg:
          - "can not find tfplugin package, tfplugin install skipped"
      when: tfplugin_from_zip.matched == 0 and tfplugin.matched == 0

    - name: message
      debug:
        msg:
          - "{{ tfplugin_from_zip_result | default('NOT DEFINED') }}"
          - "{{ tfplugin_result | default('NOT DEFINED') }}"
      when: tfplugin_from_zip_result.changed or tfplugin_result.changed
