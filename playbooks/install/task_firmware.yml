- name: find firmware package train only
  find:
    paths: "{{ cann_dirs }}"
    recurse: no
    file_type: file
    use_regex: yes
    patterns:
      - "npu-firmware.*.run"
  register: firmware_pkg
  when: ansible_local.npu_info.scene == 'train'

- set_fact: firmware_run={{firmware_pkg.files[0].path}}
  when:
    - not 'skipped' in firmware_pkg
    - firmware_pkg.matched > 0

- name: find firmware package
  find:
    paths: "{{ cann_dirs }}"
    recurse: no
    file_type: file
    use_regex: yes
    patterns:
      - "{{ ansible_local.npu_info.product }}.*firmware.*.run"
  register: firmware_pkg

- set_fact: firmware_run={{firmware_pkg.files[0].path}}
  when:
    - firmware_pkg.matched > 0

- name: find upgrade tool
  find:
    path: /usr/local/Ascend/driver
    recurse: yes
    file_type: file
    use_regex: yes
    patterns: "upgrade-tool"
  register: up_tool

- name: message
  debug:
    msg:
    - "firmware install failed: driver not installed"
  failed_when: true
  when: up_tool.matched == 0 and (firmware_pkg.matched > 0)

- name: install firmware
  shell: "bash {{ firmware_run }} --full --quiet"
  register: firmware_result
  when: (firmware_run is defined) and (firmware_run|length > 0)
  failed_when: firmware_result.rc != 0

- name: message
  debug:
    msg:
      - "can not find firmware package, firmware install skipped"
  when: (firmware_run is not defined) or (firmware_run|length == 0)

- name: message
  debug:
    msg:
      - "{{ firmware_result | default('NOT DEFINED') }}"
  when: firmware_result.changed
