- name: include vars
  include_vars: ../os_map.yml

- name: message
  debug:
    msg:
      - "can not find npu card, please check!"
  failed_when: true
  when: ansible_local.npu_info.scene == ""

- set_fact: run_dir={{ scene_dict[ansible_local.npu_info.scene] }}

- name: find upgrade tool
  find:
    path: /usr/local/Ascend/driver
    recurse: yes
    file_type: file
    use_regex: yes
    patterns: "upgrade-tool"
  register: up_tool

- name: message
  debug:
    msg:
    - "driver not installed, please install driver first"
  failed_when: true
  when: up_tool.matched == 0

- name: find firmware package only zip
  find:
    paths: "{{ run_dir }}"
    recurse: no
    file_type: file
    use_regex: yes
    patterns: "npu-firmware.*.run"
  register: firmware_pkg

- set_fact: firmware_run={{firmware_pkg.files[0].path}}
  when: firmware_pkg.matched > 0

- name: find firmware package
  find:
    paths: "{{ run_dir }}"
    recurse: no
    file_type: file
    use_regex: yes
    patterns: "{{ ansible_local.npu_info.product }}.*firmware.*.run"
  register: firmware_pkg

- set_fact: firmware_run={{firmware_pkg.files[0].path}}
  when: firmware_pkg.matched > 0

- name: install firmware
  shell: "bash {{ firmware_run }} --nox11 --full --quiet"
  register: firmware_result
  when: (firmware_run is defined) and (firmware_run|length > 0)
  failed_when: firmware_result.rc != 0

- name: message
  debug:
    msg:
      - "can not find firmware package, firmware install skipped"
  when: (firmware_run is not defined) or (firmware_run|length == 0)

- name: message
  debug:
    msg:
      - "{{ firmware_result | default('NOT DEFINED') }}"
  when: firmware_result.changed
