- name: set cann tag when scene is a910b
  set_fact:
    cann_tag: ".*6.1.*"
  when: ansible_local.npu_info.scene == 'a910b'

- name: set cann tag when scene is not a910b
  set_fact:
    cann_tag: "((?!6.1).)*"
  when: ansible_local.npu_info.scene != 'a910b'

- name: find nnae script
  find:
    paths: "{{ cann_dirs }}"
    recurse: no
    file_type: file
    use_regex: yes
    patterns: ".*nnae{{cann_tag}}{{ ansible_architecture }}.sh"
  register: nnae

- name: find nnae run package
  find:
    paths: "{{ cann_dirs }}"
    recurse: no
    file_type: file
    use_regex: yes
    patterns: ".*nnae{{cann_tag}}{{ ansible_architecture }}.run"
  register: nnae_run

- name: set log_path for root
  set_fact:
    log_path: /var/log/ascend_seclog/
  when: ansible_user_uid == 0

- name: set log_path for non-root
  set_fact:
    log_path: ~/var/log/ascend_seclog/
  when: ansible_user_uid != 0

- name: install nnae
  shell: "bash {{ nnae.files[0].path }} {{ log_path }}"
  environment:
    PATH: "{{ local_path }}/{{ python_version }}/bin:{{ansible_env.PATH}}"
    LD_LIBRARY_PATH: "{{ local_path }}/{{ python_version }}/lib"
  register: nnae_result
  when: nnae.matched > 0
  failed_when: "nnae_result.rc != 0 and 'already installed' not in nnae_result.stdout"

- name: message
  debug:
    msg:
      - "{{ nnae_result | default('NOT DEFINED') }}"
  when: nnae_result.changed

- name: check ascend cann install info
  stat:
    path: "{{ cann_info_path }}/ascend_cann_install.info"
  register: install_info

- name: set install_path enable
  set_fact:
    ins_path_cmd: "--install-path={{ install_path }}"
  when: not install_info.stat.exists

- name: set install_path disable
  set_fact:
    ins_path_cmd: ""
  when: install_info.stat.exists or ansible_user_uid != 0

- name: check nnae exists
  shell: ls {{ ascend_install_path }}/nnae/*/ascend_nnae_install.info 2>/dev/null | wc -l
  register: nnae_status

- name: install nnae
  shell: "bash {{ nnae_run.files[0].path }} --nox11 {{ cann_install_params }} {{ ins_path_cmd }}"
  environment:
    PATH: "{{ local_path }}/{{ python_version }}/bin:{{ansible_env.PATH}}"
    LD_LIBRARY_PATH: "{{ local_path }}/{{ python_version }}/lib"
  register: nnae_result
  when: nnae.matched == 0 and nnae_run.matched > 0 and nnae_status.stdout == '0'
  failed_when: "nnae_result.rc != 0 and 'already installed' not in nnae_result.stdout"

- name: message
  debug:
    msg:
      - "{{ nnae_result | default('NOT DEFINED') }}"
  when: nnae.matched == 0 and nnae_result.changed and nnae_status.stdout == '0'

- name: upgrade nnae
  shell: "bash {{ nnae_run.files[0].path }} --nox11 --upgrade"
  environment:
    PATH: "{{ local_path }}/{{ python_version }}/bin:{{ansible_env.PATH}}"
    LD_LIBRARY_PATH: "{{ local_path }}/{{ python_version }}/lib"
  register: nnae_result
  when: nnae.matched == 0 and nnae_run.matched > 0 and nnae_status.stdout != '0'
  failed_when: "nnae_result.rc != 0 and 'already installed' not in nnae_result.stdout"

- name: message
  debug:
    msg:
      - "{{ nnae_result | default('NOT DEFINED') }}"
  when: nnae.matched == 0 and nnae_result.changed and nnae_status.stdout != '0'

- name: message
  debug:
    msg:
      - "can not find nnae package, nnae install skipped"
  when: nnae_run.matched == 0
