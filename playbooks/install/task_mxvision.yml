- name: find mxvision run package
  find:
    paths: "{{ cann_dirs }}"
    recurse: no
    file_type: file
    use_regex: yes
    patterns: ".*mxvision.*{{ ansible_architecture }}.run"
  register: mxvision_run

- name: set mxvision info path for root
  set_fact:
    mxvision_info_path: "/usr/local/Ascend"
    cacheable: yes
  when: ansible_user_uid == 0

- name: check mxvision install info for root
  stat:
    path: "{{ mxvision_info_path }}/mxVision"
  register: mxvision_info
  when: ansible_user_uid == 0

- name: set mxvision info path for non-root
  set_fact:
    mxvision_info_path: "{{ ansible_user_dir }}/Ascend"
    cacheable: yes
  when: ansible_user_uid != 0

- name: check mxvision install info for non-root
  stat:
    path: "{{ mxvision_info_path }}/mxVision"
  register: mxvision_info_non_root
  when: ansible_user_uid != 0

- name: install mxvision for root
  shell: ". /usr/local/Ascend/ascend-toolkit/set_env.sh && bash {{ mxvision_run.files[0].path }} --nox11 --install --install-path=/usr/local/Ascend"
  register: mxvision_result
  when: mxvision_run.matched > 0 and ansible_user_uid == 0 and (not mxvision_info.stat.exists)
  failed_when: "mxvision_result.rc != 0 and 'The installation is successfully' not in mxvision_result.stdout"

- name: message
  debug:
    msg:
      - "{{ mxvision_result | default('NOT DEFINED') }}"
  when: mxvision_result.changed

- name: install mxvision for non-root
  shell: ". ${HOME}/Ascend/ascend-toolkit/set_env.sh && bash {{ mxvision_run.files[0].path }} --nox11 --install --install-path=${HOME}/Ascend"
  register: mxvision_result
  when: mxvision_run.matched > 0 and ansible_user_uid != 0 and (not mxvision_info_non_root.stat.exists)
  failed_when: "mxvision_result.rc != 0 and 'The installation is successfully' not in mxvision_result.stdout"

- name: message
  debug:
    msg:
      - "{{ mxvision_result | default('NOT DEFINED') }}"
  when: mxvision_result.changed

- name: message
  debug:
    msg:
      - "can not find mxvision package, mxvision install skipped"
  when: mxvision_run.matched == 0