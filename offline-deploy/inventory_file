#           *********************主机变量配置区域*********************
[master]
# [master]下配置控制节点信息,第一行信息为k8s主控节点信息
# 示例1 root账号配置了免密登录，使用root账号登录，且ssh使用22端口，单master场景
#10.10.10.10 ansible_ssh_user="root" set_hostname=master-1 k8s_api_server_ip=10.10.10.10

# 示例2 test账号配置了免密登录，使用test账号登录，ssh使用默认22端口，未配置NOPASSWD，多master场景
#10.10.10.11 ansible_ssh_user="test" ansible_become_password="test1234" set_hostname=master-2 k8s_api_server_ip=10.10.10.11 kube_interface=enp125s0f0

# 示例3 未配置免密登录，使用普通账号登录，ssh使用默认22端口，配置了NOPASSWD，多master场景
#10.10.10.12 ansible_ssh_user="test" ansible_ssh_pass="test1234" set_hostname=master-3 k8s_api_server_ip=10.10.10.12 kube_interface=enp125s0f0

# 示例4 未配置免密登录，使用普通账号登录，ssh使用默认22端口，未配置了NOPASSWD，多master场景
#10.10.10.13 ansible_ssh_user="test" ansible_ssh_pass="test1234" ansible_become_password="test1234" set_hostname=master-4 k8s_api_server_ip=10.10.10.13 kube_interface=enp125s0f0

[worker]
# [worker]下配置工作节点信息，可以配置多个工作节点，每个节点信息占据一行
# 已在[master]中的节点并且设置了set_hostname，则[worker]中不需要再配置set_hostname，如下面[worker]配置的第一行, 如有驱动安装, ansible_ssh_user需配置为root
#10.10.10.12 ansible_ssh_user="root"
#10.10.10.13 ansible_ssh_user="test" ansible_ssh_pass="test1234" ansible_become_password="test1234" ansible_ssh_port=9090
#10.10.10.14 ansible_ssh_user="test" ansible_ssh_pass="test1234" ansible_become_password="test1234" ansible_ssh_port=9090 set_hostname=worker-1

[mef]
# [mef]下配置待安装的mef节点，通常需要为k8s的主控节点
#10.10.10.10 ansible_ssh_user="root"

[other_build_image]
# [other_build_image]下配置k8s集群中与master节点架构不一致的服务，并且该节点(或多个异构节点)会部署MindX DL，任选其中一台异构节点配置到如下主机组即可
#10.10.10.15 ansible_ssh_user="test" ansible_ssh_pass="test1234" ansible_become_password="test1234" ansible_ssh_port=9090

#           *********************以下为worker变量配置区域**************************
[worker:vars]
user=HwHiAiUser
group=HwHiAiUser

#           *********************以下为全局变量配置区域**************************
[all:vars]
# 场景1安装组件: Docker, Kubernetes, Ascend Docker Runtime, Ascend Device Plugin, Volcano, HCCL-Controller, NodeD, NPU-Exporter
# 场景2安装组件: Ascend Docker Runtime, Ascend Device Plugin, Volcano，HCCL-Controller(可选), NodeD(可选), NPU-Exporter(可选)
# 场景3安装组件: Ascend Docker Runtime, Ascend Device Plugin, NPU-Exporter(可选)
# 场景4安装组件: Docker, Kubernetes
# SCENE_NUM:安装场景选择，可选1，2，3，4场景,默认场景1
SCENE_NUM=1

# EXTRA_COMPONENT: 为可选组件，组件间逗号隔开，可选值如下；
# 	npu-exporter     表示安装NPU-Exporter组件
# 	noded            表示安装NodeD组件
# 	hccl-controller  表示安装HCCL-Controller组件
# 配置示例：EXTRA_COMPONENT="npu-exporter,noded,hccl-controller"
EXTRA_COMPONENT=""

# k8s集群使用的子网IP网段，如果与服务器IP网段重合，需要修改下面的值为其他私有网段。如：192.168.0.0/16
POD_NETWORK_CIDR="192.168.0.0/16"

# 多master场景下配置虚拟IP，kube_vip需跟k8s集群节点ip在同一子网，且为闲置、未被他人使用的ip
KUBE_VIP=""

# 使用harbor镜像仓时配置harbor服务地址，格式为ip:port，不含协议，如"192.0.0.1:1234"
HARBOR_SERVER=""

# 配置harbor管理员账号信息，用于在harbor中创建名为项目，以及推送、拉取k8s相关、MindX DL相关的镜像
HARBOR_ADMIN_USER=""
HARBOR_ADMIN_PASSWORD=""

# MindX DL相关镜像的项目公开状态，默认为私有，可选值false或true
HARBOR_PUBLIC_PROJECT="false"

# 使用https协议时，配置harbor镜像仓根CA文件路径
HARBOR_CA_FILE=""
