- name: find npu-smi command
  shell: command -v npu-smi
  register: npu_smi_exists
  failed_when: false

- name: find hccn_tool command
  shell: command -v hccn_tool
  register: hccn_tool_exists
  failed_when: false

- name: copy hccn-aarch64 to remote hosts
  copy:
    src: "/root/resources/tool/hccn-aarch64"
    dest: "{{ ansible_env.HOME }}/"
    mode: 0700
    force: yes

- name: copy hccn-x86_64 to remote hosts
  copy:
    src: "/root/resources/tool/hccn-x86_64"
    dest: "{{ ansible_env.HOME }}/"
    mode: 0700
    force: yes

- name: hccn_tool configures IP address
  shell: "{{ ansible_env.HOME }}/hccn-{{ ansible_architecture }} view"
  register: hccn_result

- name: check driver status
  shell: npu-smi info
  register: npu_result
  when: npu_smi_exists.rc == 0

- name: check docker status
  shell: if [ -f /usr/local/Ascend/Ascend-Docker-Runtime/ascend-docker-runtime ]; then cat /usr/local/Ascend/Ascend-Docker-Runtime/ascend_docker_runtime_install.info | grep version ; elif [ -f /usr/local/Ascend/toolbox/latest/Ascend-Docker-Runtime/ascend-docker-runtime ]; then cat /usr/local/Ascend/toolbox/latest/ascend_toolbox_install.info | grep version ; else echo "NOT_FOUND" ; fi
  register: docker_result

- name: write to file
  template:
    src: reptemp.j2
    dest: "{{ ansible_env.HOME }}/report_temp.txt"

- name: fetch back file
  fetch:
    src: "{{ ansible_env.HOME }}/report_temp.txt"
    dest: "reports/results-{{ inventory_hostname }}.txt"
    flat: true

- name: print lossing parts
  debug:
    msg: "[WARNING]: Can not find npu-smi, maybe driver not installed, or env not right"
  when: npu_smi_exists.rc != 0

- debug:
    msg: "[WARNING]: Can not find hccn_tool, maybe driver not installed or supported, or env not right"
  when: hccn_result.rc != 0 or hccn_tool_exists.rc != 0
  name: print lossing parts